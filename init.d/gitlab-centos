#!/bin/bash
#
# GitLab
# Maintainer: @elvanja, @troyanov, @eiyaya, @foyo23
# App Version: 5.2.0

# chkconfig: 2345 82 55
# processname: puma
# processname: sidekiq
# description: Runs puma and sidekiq for nginx integration.

# Related (kudos @4sak3n0ne):
# https://github.com/gitlabhq/gitlabhq/issues/1049#issuecomment-8386882
# https://gist.github.com/3062860

# Include RedHat function library
. /etc/rc.d/init.d/functions

# The name of the service
NAME=git

# The username and path to the gitlab source
APP_USER=git
APP_ROOT=/home/$APP_USER/gitlab

# The PID and LOCK files used by puma and sidekiq
PID_PATH="$APP_ROOT/tmp/pids"
WEB_SERVER_PID="$PID_PATH/puma.pid"
SIDEKIQ_PID="$PID_PATH/sidekiq.pid"

WLOCK=/var/lock/subsys/puma
SLOCK=/var/lock/subsys/sidekiq

# The options to use when running puma
OPTS="-C $APP_ROOT/config/puma.rb -e production -d"

# Ruby related path update
RUBY_PATH_PATCH="PATH=$PATH:/usr/local/bin:/usr/local/lib:/home/git/bin && export PATH && "

start() {
  cd $APP_ROOT

  # Start puma
  echo -n $"Starting puma: "
  daemon --pidfile=$WEB_SERVER_PID --user=$APP_USER "$RUBY_PATH_PATCH bundle exec puma $OPTS"
  puma=$?
  [ $puma -eq 0 ] && touch $WLOCK
  echo

  # Start sidekiq
  echo -n $"Starting sidekiq: "
  daemon --pidfile=$SIDEKIQ_PID --user=$APP_USER "$RUBY_PATH_PATCH RAILS_ENV=production bundle exec rake sidekiq:start"
  sidekiq=$?
  [ $sidekiq -eq 0 ] && touch $SLOCK
  echo

  retval=$puma || $sidekiq
  return $retval
}

stop() {
  cd $APP_ROOT

  # Stop puma
  echo -n $"Stopping puma: "
  killproc -p $WEB_SERVER_PID
  puma=$?
  [ $puma -eq 0 ] && rm -f $WLOCK
  echo

  # Stop sidekiq
  echo -n $"Stopping sidekiq: "
  killproc -p $SIDEKIQ_PID
  sidekiq=$?
  [ $sidekiq -eq 0 ] && rm -f $SLOCK
  echo

  retval=$puma || $sidekiq
  return $retval
}

restart() {
  stop
  start
}

get_status() {
  status -p $WEB_SERVER_PID puma
  status -p $SIDEKIQ_PID sidekiq
}

query_status() {
  get_status >/dev/null 2>&1
}

case "$1" in
  start)
    query_status && exit 0
    start
    ;;
  stop)
    query_status || exit 0
    stop
    ;;
  restart)
    restart
    ;;
  status)
    get_status
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
